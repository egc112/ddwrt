Index: opt/etc/config/base.nvramconfig
===================================================================
--- opt/etc/config/base.nvramconfig	(revision 57919)
+++ opt/etc/config/base.nvramconfig	(working copy)
@@ -132,7 +132,10 @@
  "dns_redirect"  "DNS Redirection"  "CHOICE" "2"  "0"  "1"  "FALSE" "0"
  "dns_redirectdot"  "DNS Redirection DoT"  "CHOICE" "2"  "0"  "1"  "FALSE" "0"
  "recursive_dns"  "DNS Recursive"  "CHOICE" "2"  "0"  "1"  "FALSE" "0"
- "dns_ipv6_enable"  "DNS enable IPv6  RA"  "CHOICE"  "2" "0"  "1"  "FALSE" "0"
+ "dnsipv6_enable"  "DNS enable IPv6  RA"  "CHOICE"  "2" "0"  "1"  "FALSE" "0"
+ "dnsipv6_rastate"  "IPv6 slaac or ra-stateless"  "CHOICE"  "2" "0"  "1"  "FALSE" "0"
+ "dnsipv6_leasetime"  "IPv6 leasetime"  "RANGE"  "0" "99999" "FALSE" "0"
+ "dnsipv6_enable" "dnsipv6 handler" "DNSIPV6" "FALSE" "0"
  "dnsmasq_options"  "DNS Masq"  "NULL"  "TRUE" "0"
  "dnsmasq_cachesize"  "DNS Cache Size"  "RANGE"  "0" "99999999" "FALSE" "0"
  "dnsmasq_forward_max"  "DNS Forward Max"  "RANGE"  "0" "99999999" "FALSE" "0"
Index: src/router/httpd/Makefile
===================================================================
--- src/router/httpd/Makefile	(revision 57919)
+++ src/router/httpd/Makefile	(working copy)
@@ -609,6 +609,7 @@
 endif
 ifeq ($(CONFIG_IPV6),y)
 CFLAGS += -DHAVE_IPV6
+VISOBJS += dnsipv6if.o
 endif
 ifeq ($(CONFIG_DNSSEC),y)
 CFLAGS += -DHAVE_DNSSEC
Index: src/router/httpd/modules/base.c
===================================================================
--- src/router/httpd/modules/base.c	(revision 57919)
+++ src/router/httpd/modules/base.c	(working copy)
@@ -225,6 +225,9 @@
 #ifdef HAVE_MDNS
 		{ "AVAHI", "validate_avahi", 0 },
 #endif
+#ifdef HAVE_IPV6
+		{ "DNSIPV6", "validate_dnsipv6", 0 },
+#endif
 #ifdef HAVE_OPENVPN
 		{ "OPENVPNUSERPASS", "validate_openvpnuserpass", 0 },
 #endif
Index: src/router/httpd/modules/callvalidate_static.c
===================================================================
--- src/router/httpd/modules/callvalidate_static.c	(revision 57919)
+++ src/router/httpd/modules/callvalidate_static.c	(working copy)
@@ -92,6 +92,7 @@
 void validate_password2(webs_t wp, char *value, struct variable *v);
 void validate_portsetup(webs_t wp, char *value, struct variable *v);
 void validate_avahi(webs_t wp, char *value, struct variable *v);
+void validate_dnsipv6(webs_t wp, char *value, struct variable *v);
 void validate_port_trigger(webs_t wp, char *value, struct variable *v);
 void validate_range(webs_t wp, char *value, struct variable *v);
 void validate_reboot(webs_t wp, char *value, struct variable *v);
@@ -173,6 +174,9 @@
 #ifdef HAVE_MDNS
 	{ "validate_avahi", &validate_avahi },
 #endif
+#ifdef HAVE_IPV6
+	{ "validate_dnsipv6", &validate_dnsipv6 },
+#endif
 #ifdef HAVE_OPENVPN
 	{ "validate_openvpnuserpass", &validate_openvpnuserpass },
 #endif
Index: src/router/httpd/validate/webs.c
===================================================================
--- src/router/httpd/validate/webs.c	(revision 57919)
+++ src/router/httpd/validate/webs.c	(working copy)
@@ -1984,6 +1984,37 @@
 }
 #endif
 
+#ifdef HAVE_IPV6
+void validate_dnsipv6(webs_t wp, char *value, struct variable *v)
+{
+	char bufferif[512] = { 0 };
+	char dnsipv6if[128] = { 0 };
+	char word[32] = { 0 };
+	char *next;
+	int idx = 0;
+	bzero(bufferif, 512);
+	getIfList(bufferif, NULL);
+	dd_loginfo("validate_dnsipv6", "interface list: %s", bufferif);
+	//syslog(LOG_INFO, "dnsipv6 interface list: %s\n", bufferif);
+	foreach(word, bufferif, next)
+	{
+		if (!strchr(word, ':')) {
+			char temp[32];
+			snprintf(temp, sizeof(temp), "dnsipv6if_%s", word);
+			char *val = websGetVar(wp, temp, "0");
+			if (!strcmp(val, "1")) {
+				if (idx)
+					strcat(dnsipv6if, " ");
+				strcat(dnsipv6if, word);
+				idx++;
+			}
+		}
+	}
+	nvram_safe_set("dnsipv6_interfaces", dnsipv6if);
+	dd_loginfo("validate_dnsipv6", "Saving dnsipv6if: %s", dnsipv6if);
+}
+#endif
+
 #ifdef HAVE_SSHD
 void ssh_downloadkey(webs_t wp)
 {
Index: src/router/httpd/visuals/dnsipv6if.c
===================================================================
--- src/router/httpd/visuals/dnsipv6if.c	(nonexistent)
+++ src/router/httpd/visuals/dnsipv6if.c	(working copy)
@@ -0,0 +1,176 @@
+/*
+ * Copyright (C) 2022 EGC
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ */
+
+// for popen warning in Ubuntu
+//#define _DEFAULT_SOURCE
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <ctype.h> //for isdigit and isalpha
+#include <errno.h>
+#include <stdarg.h>
+
+//for ddwrt
+// /*
+#include <sys/time.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <syslog.h>
+#include <signal.h>
+#include <utils.h>
+#include <bcmnvram.h>
+#include <shutils.h>
+//#include <services.h>
+
+#include <broadcom.h>
+
+// */
+
+EJ_VISIBLE void ej_show_dnsipv6if(webs_t wp, int argc, char_t **argv)
+{
+	char bufferif[256];
+	int count = 1;
+	int maxcount = 4;
+	char temp[64];
+	char word[32];
+	char *next;
+	bzero(bufferif, 256);
+
+	getIfListNoPorts(bufferif, NULL);
+	char *wordlist = nvram_safe_get("dnsipv6_interfaces");
+	dd_loginfo("show_dnsipv6if", "show_dnsipv6if: %s", wordlist);
+	dd_loginfo("show_dnsipv6if", "getIfListNoPorts: %s", bufferif);
+
+	//websWrite(wp, "<fieldset>\n");
+	//show_caption_legend(wp, "service.dnsmasq_ipv6");
+	//websWrite(wp, "<div id=\"iddnsmasq_ipv6\">\n"); //begin hide show
+
+	websWrite(wp, "<fieldset>\n");
+	show_caption_legend(wp, "service.mdns_interfaces");
+	websWrite(wp, "<table>\n");
+	websWrite(wp, "<tr>\n");
+	foreach(word, bufferif, next)
+	{
+		if (!strchr(word, ':')) {
+			snprintf(temp, sizeof(temp), "dnsipv6if_%s", word);
+			{
+				websWrite(wp, "<td align=\"right\">\n");
+				websWrite(wp, "<label for=\"%s\">%s</label>", temp, word);
+				websWrite(wp, "</td>\n");
+				websWrite(wp, "<td>\n");
+
+				char ifname[32];
+				char *next2;
+				int found = 0;
+				foreach(ifname, wordlist, next2)
+				{
+					if (!strcmp(ifname, word))
+						found = 1;
+				}
+				websWrite(wp, "<input class=\"spaceradio\" type=\"checkbox\" name=\"%s\" value=\"1\" %s />\n", temp,
+					  found ? "checked=\"checked\"" : "");
+				websWrite(wp, "</td>\n");
+				if (count++ > maxcount) {
+					websWrite(wp, "</tr>\n");
+					websWrite(wp, "<tr>\n");
+					maxcount += 5;
+					//dd_loginfo("show_dnsipv6if", "count: %d; maxcount: %d", count, maxcount);
+				}
+			}
+		}
+	}
+	websWrite(wp, "</tr>\n");
+	websWrite(wp, "</table>\n");
+	websWrite(wp, "</fieldset>\n");
+	//end interfaces
+	//websWrite(wp, "</div>\n"); //end hide show
+	//websWrite(wp, "</fieldset><br />\n");
+}
+
+
+
+/*
+//prototype
+int showinterface(webs_t wp, char ifname[], char *wordlist);
+
+
+int showinterface(webs_t wp, char ifname[32], char *wordlist)
+{
+	char bufferif[256];
+	int count = 1;
+	int maxcount = 4;
+	char temp[64];
+	char word[32];
+	char *next;
+	bzero(bufferif, 256);
+
+	getIfListNoPorts(bufferif, NULL);
+	//char *wordlist = nvram_safe_get("dnsipv6_interfaces");
+	dd_loginfo("showinterfaces", "interfaces: %s; ifname: %s", wordlist, ifname);
+
+	websWrite(wp, "<fieldset>\n");
+	show_caption_legend(wp, "service.mdns_interfaces");
+	websWrite(wp, "<table>\n");
+	websWrite(wp, "<tr>\n");
+	foreach(word, bufferif, next)
+	{
+		if (!strchr(word, ':')) {
+			snprintf(temp, sizeof(temp), "%s_%s", word, ifname);
+			{
+				websWrite(wp, "<td align=\"right\">\n");
+				websWrite(wp, "<label for=\"%s\">%s</label>", temp, word);
+				websWrite(wp, "</td>\n");
+				websWrite(wp, "<td>\n");
+
+				char ifname[32];
+				char *next2;
+				int found = 0;
+				foreach(ifname, wordlist, next2)
+				{
+					if (!strcmp(ifname, word))
+						found = 1;
+				}
+				websWrite(wp, "<input class=\"spaceradio\" type=\"checkbox\" name=\"%s\" value=\"1\" %s />\n", temp,
+					  found ? "checked=\"checked\"" : "");
+				websWrite(wp, "</td>\n");
+				if (count++ > maxcount) {
+					websWrite(wp, "</tr>\n");
+					websWrite(wp, "<tr>\n");
+					maxcount += 5;
+				}
+			}
+		}
+	}
+	websWrite(wp, "</tr>\n");
+	websWrite(wp, "</table>\n");
+	websWrite(wp, "</fieldset>\n");
+	return 0;
+
+}
+
+EJ_VISIBLE void ej_show_dnsipv6if(webs_t wp, int argc, char_t **argv)
+{
+	
+	char *wordlist = nvram_safe_get("dnsipv6_interfaces");
+	showinterface(wp, "dnsipv6", wordlist);
+	dd_loginfo("show_dnsipv6if", "show_dnsipv6if: %s; interface name: dnsipv6", wordlist);
+}
+*/
+
Index: src/router/ipv6/ipv6.ipv6config
===================================================================
--- src/router/ipv6/ipv6.ipv6config	(revision 57919)
+++ src/router/ipv6/ipv6.ipv6config	(working copy)
@@ -69,7 +69,8 @@
 		<div class="setting">
 			<div class="label"><% tran("management.ipv6_dhcp6c_cust"); %></div>
 			<input class="spaceradio" type="radio" value="1" name="dhcp6c_custom" <% nvc("dhcp6c_custom","1"); %> onclick="show_layer_ext(this, 'iddhcp6c_custom', true)" /><% tran("share.enable"); %>&nbsp;
-			<input class="spaceradio" type="radio" value="0" name="dhcp6c_custom" <% nvc("dhcp6c_custom","0"); %> onclick="show_layer_ext(this, 'iddhcp6c_custom', false)" /><% tran("share.disable"); %>
+			<input class="spaceradio" type="radio" value="0" name="dhcp6c_custom" <% nvc("dhcp6c_custom","0"); %> onclick="show_layer_ext(this, 'iddhcp6c_custom', false)" /><% tran("share.disable"); %>&nbsp;
+			<input class="spaceradio" type="radio" value="2" name="dhcp6c_custom" <% nvc("dhcp6c_custom","2"); %> onclick="show_layer_ext(this, 'iddhcp6c_custom', false)" /><% tran("service.dnsmasq_ipv6"); %>
 		</div>
 		<div id="iddhcp6c_custom">
 			<div class="label"><% tran("management.ipv6_dhcp6c_conf"); %></div>
Index: src/router/ipv6/ipv6.nvramconfig
===================================================================
--- src/router/ipv6/ipv6.nvramconfig	(revision 57919)
+++ src/router/ipv6/ipv6.nvramconfig	(working copy)
@@ -6,7 +6,7 @@
  "radvd_custom" "enable custom" "CHOICE" "2" "0" "1"  "FALSE" "0"
  "radvd_conf" "custom config"  "NULL"  "TRUE" "0"
  "dhcp6c_norelease" "dhcp6c no release" "CHOICE" "2" "0" "1"  "FALSE" "0"
- "dhcp6c_custom" "enable custom" "CHOICE" "2" "0" "1"  "FALSE" "0"
+ "dhcp6c_custom" "enable custom" "CHOICE" "3" "0" "1" "2" "FALSE" "0"
  "dhcp6c_conf" "custom cnfig"  "NULL"  "TRUE" "0"
  "dhcp6s_enable" "enable dhcp6s" "CHOICE" "2" "0" "1"  "FALSE" "0"
  "dhcp6s_seq_ips" "dhcp6s sequential ips" "CHOICE" "2" "0" "1"  "FALSE" "0"
Index: src/router/kromo/dd-wrt/lang_pack/english.js
===================================================================
--- src/router/kromo/dd-wrt/lang_pack/english.js	(revision 57919)
+++ src/router/kromo/dd-wrt/lang_pack/english.js	(working copy)
@@ -1831,6 +1831,9 @@
 service.dns_crypt="Encrypt DNS";
 service.dnsmasq_ipv6="Dnsmasq IPv6 Settings";
 service.dnsmasq_ipv6_enabled="IPv6 Router Advertisement (RA)";
+service.dnsmasq_ipv6_rastate="DHCP6 RA mode";
+service.dnsmasq_ipv6_rastateful="Stateful DHCP6";
+service.dnsmasq_ipv6_rastateless="Stateless DHCP6";
 service.dns_smartdns="SmartDNS Resolver";
 service.dns_smartdns_label="Enable Resolver";
 service.dns_smartdns_dualstack="Dualstack IP Selection";
Index: src/router/kromo/dd-wrt/lang_pack/german.js
===================================================================
--- src/router/kromo/dd-wrt/lang_pack/german.js	(revision 57919)
+++ src/router/kromo/dd-wrt/lang_pack/german.js	(working copy)
@@ -1684,8 +1684,10 @@
 service.dnsmasq_forward_max="Maximale gleichzeitige Verbindungen";
 service.dnsmasq_ipv6="Dnsmasq IPv6 Settings";
 service.dnsmasq_ipv6_enabled="IPv6 Router Advertisement (RA)";
+service.dnsmasq_ipv6_rastate="DHCP6 RA mode";
+service.dnsmasq_ipv6_rastateful="Stateful DHCP6";
+service.dnsmasq_ipv6_rastateless="Stateless DHCP6";
 
-
 //pptp.webservices
 service.pptp_h2="PPTP Server / Client";
 service.pptp_legend="PPTP";
Index: src/router/kromo/dd-wrt/Services.asp
===================================================================
--- src/router/kromo/dd-wrt/Services.asp	(revision 57919)
+++ src/router/kromo/dd-wrt/Services.asp	(working copy)
@@ -137,6 +137,9 @@
 	if (document.setup.dnsmasq_enable) {
 		show_layer_ext(document.setup.dnsmasq_enable, 'idipv6dns', <% nvem("ipv6_enable", "1", "1", "0"); %> == 1);
 	}
+	if (document.setup.dnsmasq_enable) {
+		show_layer_ext(document.setup.dnsmasq_enable, 'iddnsmasq_ipv6', <% nvem("dnsipv6_enable", "1", "1", "0"); %> == 1);
+	}
 	if (document.setup.lighttpd_enable) {
 		show_layer_ext(document.setup.lighttpd_enable, 'lighttpdconfig', <% nvem("lighttpd_enable", "1", "1", "0"); %> == 1);
 	}
@@ -196,6 +199,9 @@
 							<h2><% tran("service.h2"); %></h2>
 							<% show_modules(".webservices"); %>
 							//experimental by egc
+							//<% ifndef("HAVE_IPV6", "<!--"); %>
+							//	<% show_dnsipv6if(); %>
+							//<% ifndef("HAVE_IPV6", "-->"); %>
 							<% show_mdnsif(); %>
 							<div id="footer" class="submitFooter">
 								<script type="text/javascript">
Index: src/router/services/services/dhcp6.c
===================================================================
--- src/router/services/services/dhcp6.c	(revision 57919)
+++ src/router/services/services/dhcp6.c	(working copy)
@@ -70,10 +70,18 @@
 {
 	char wan_if_buffer[33];
 	FILE *fp, *fpc;
-	char *buf;
-	int prefix_len;
+	//char *buf;
+	int sla_len;
+	int ipv6_pf_len = atoi(nvram_safe_get("ipv6_pf_len"));
 	char ea[ETHER_ADDR_LEN];
 	unsigned long iaid = 0;
+
+	char ifname[32];
+	char *next;
+	char ipv6_iflist[128] = { 0 };
+	//char *wordlist = nvram_safe_get("dnsipv6_interfaces");
+	//dd_loginfo("dnsipv6if", "dhcp6.c dnsipv6if: %s", wordlist);
+	int sla_id = 0;
 	struct {
 		uint16 type;
 		uint16 hwtype;
@@ -115,9 +123,13 @@
 		if (nvram_exists("dhcp6c_conf"))
 			writenvram("dhcp6c_conf", "/tmp/dhcp6c.conf");
 	} else {
-		prefix_len = 64 - (atoi(nvram_safe_get("ipv6_pf_len")) ?: 64);
-		if (prefix_len < 0)
-			prefix_len = 0;
+		//sla_len = 64 - ipv6_pf_len ?: 64;    // egc: why this ? This will stop working if prefix is 64 which can work for one subnet
+		/*
+		sla_len = 64 - ipv6_pf_len;
+		if (sla_len < 0)
+			sla_len = 0;
+		*/
+		sla_len = (64 - ipv6_pf_len < 0 )  ? 0 : (64 - ipv6_pf_len);
 
 		if ((fpc = fopen("/etc/dhcp6c.conf", "w"))) {
 			fprintf(fpc,
@@ -179,17 +191,27 @@
 					fprintf(fpc, ";\n");
 				}
 			}
-
 			fprintf(fpc,
 				"};\n"
-				"id-assoc pd 0 {\n" //
-				" prefix-interface %s {\n" //
-				"  sla-id 0;\n" //
-				"  sla-len %d;\n" //
-				" };\n" //
-				"};\n" //
-				"id-assoc na 0 { };\n",
-				nvram_safe_get("lan_ifname"), prefix_len);
+				"id-assoc pd 0 {\n"
+				"prefix ::/%d infinity;\n", ipv6_pf_len);
+			if (nvram_matchi("dhcp6c_custom", 0)) {
+				strlcpy(ipv6_iflist, "br0", sizeof(ipv6_iflist));
+			} else {
+				strlcpy(ipv6_iflist, nvram_safe_get("dnsipv6_interfaces"), sizeof(ipv6_iflist));
+			}
+			foreach(ifname, ipv6_iflist, next) {
+				fprintf(fpc,
+					" prefix-interface %s {\n"
+					"  sla-id %d;\n"
+					"  sla-len %d;\n"
+					" };\n",
+					ifname, sla_id, sla_len);
+				sla_id++;
+			}
+			fprintf(fpc,
+				"};\n"
+				"id-assoc na 0 { };\n");
 			fclose(fpc);
 		}
 	}
Index: src/router/services/services/dnsmasq.c
===================================================================
--- src/router/services/services/dnsmasq.c	(revision 57919)
+++ src/router/services/services/dnsmasq.c	(working copy)
@@ -731,9 +731,27 @@
 #endif
 #ifdef HAVE_IPV6
 	if (nvram_matchi("ipv6_enable", 1)) {
-		if (nvram_matchi("dns_ipv6_enable", 1)) {
-			fprintf(fp, "dhcp-range=%s,%s\n", "::,constructor:br0,ra-names,ra-stateless","12h");
-			fprintf(fp, "ra-param=%s\n", "br0,10,300");
+		if (nvram_matchi("dnsipv6_enable", 1)) {
+			//leastime
+			char ipv6_leasetime[12] = { 0 };
+			char dnsipv6_rastate[16] = { 0 } ;
+			nvram_geti("dnsipv6_rastate") ? strlcpy(dnsipv6_rastate, "slaac", sizeof(dnsipv6_rastate)) : strlcpy(dnsipv6_rastate, "ra-stateless", sizeof(dnsipv6_rastate));
+
+			if ( ! strcmp(nvram_safe_get("dnsipv6_leasetime"), "0")) {
+				strlcpy(ipv6_leasetime, "infinite", sizeof(ipv6_leasetime));
+			} else {
+				snprintf(ipv6_leasetime, sizeof(ipv6_leasetime), "%sm", nvram_safe_get("dnsipv6_leasetime"));
+			}
+			//interfaces
+			char ifname[32];
+			char *next;
+			char *wordlist = nvram_safe_get("dnsipv6_interfaces");
+			dd_loginfo("dnsipv6if", "dnsmasq dnsipv6if: %s", wordlist);
+			foreach(ifname, wordlist, next) {
+				fprintf(fp, "dhcp-range=::%s,::%s,constructor:%s,ra-names,%s,%s\n", nvram_safe_get("dnsipv6_range_start"), nvram_safe_get("dnsipv6_range_end"), ifname, dnsipv6_rastate, ipv6_leasetime);
+				fprintf(fp, "ra-param=%s%s\n", ifname,",10,300");
+			}
+			
 			fprintf(fp, "enable-ra\n");
 			// Suppress logging of the routine operation:
 			fprintf(fp, "quiet-dhcp6\nquiet-ra\n");
Index: src/router/services/sysinit/defaults.c
===================================================================
--- src/router/services/sysinit/defaults.c	(revision 57919)
+++ src/router/services/sysinit/defaults.c	(working copy)
@@ -2267,7 +2267,12 @@
 #endif
 	{ "dnsmasq_options", "" },
 #ifdef HAVE_IPV6
-	{ "dns_ipv6_enable", "0" },
+	{ "dnsipv6_enable", "0" },
+	{ "dnsipv6_leasetime", "1440" },
+	{ "dnsipv6_rastate", "1" },
+	{ "dnsipv6_range_start", "1" },
+	{ "dnsipv6_range_end", "FFFF" },
+	{ "dnsipv6_interfaces", "br0" },
 #endif
 	// #ifdef HAVE_DDLAN
 	// {"ntp_enable", "0"},
Index: src/router/udhcpd/config/dhcpd.webservices
===================================================================
--- src/router/udhcpd/config/dhcpd.webservices	(revision 57919)
+++ src/router/udhcpd/config/dhcpd.webservices	(working copy)
@@ -203,9 +203,27 @@
 					<legend><% tran("service.dnsmasq_ipv6"); %></legend>
 					<div class="setting">
 						<div class="label"><% tran("service.dnsmasq_ipv6_enabled"); %></div>
-						<input class="spaceradio" type="radio" name="dns_ipv6_enable" value="1" <% nvc("dns_ipv6_enable", "1"); %> /><% tran("share.enable"); %>&nbsp;
-						<input class="spaceradio" type="radio" name="dns_ipv6_enable" value="0" <% nvc("dns_ipv6_enable", "0"); %> /><% tran("share.disable"); %>
+						<input class="spaceradio" type="radio" name="dnsipv6_enable" value="1" <% nvc("dnsipv6_enable", "1"); %> onclick="show_layer_ext(this, 'iddnsmasq_ipv6', true)" /><% tran("share.enable"); %>&nbsp;
+						<input class="spaceradio" type="radio" name="dnsipv6_enable" value="0" <% nvc("dnsipv6_enable", "0"); %> onclick="show_layer_ext(this, 'iddnsmasq_ipv6', false)" /><% tran("share.disable"); %>
 					</div>
+					<div id="iddnsmasq_ipv6">
+						<div class="setting">
+							<div class="label"><% tran("idx.dhcp_lease"); %></div>
+							<input class="num" maxlength="5" size="4" name="dnsipv6_leasetime" value="<% nvg("dnsipv6_leasetime"); %>" />&nbsp;
+							<script type="text/javascript">Capture(share.minutes)</script>
+							<span class="default"><script type="text/javascript">
+							//<![CDATA[
+								document.write("(" + share.deflt + ": 1440 " + share.minutes + ",  0=infinite)");
+							//]]>
+							</script></span>
+						</div>
+						<div class="setting">
+							<div class="label"><% tran("service.dnsmasq_ipv6_rastate"); %></div>
+							<input class="spaceradio" type="radio" name="dnsipv6_rastate" value="1" <% nvc("dnsipv6_rastate", "1"); %> /><% tran("service.dnsmasq_ipv6_rastateful"); %>&nbsp;&nbsp;
+							<input class="spaceradio" type="radio" name="dnsipv6_rastate" value="0" <% nvc("dnsipv6_rastate", "0"); %> /><% tran("service.dnsmasq_ipv6_rastateless"); %>
+						</div>
+						<% show_dnsipv6if(); %>
+					</div>
 				</fieldset><br/>
 			</div>
 			<% ifndef("HAVE_IPV6", "-->"); %>
